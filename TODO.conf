TODO:
C:\AppServ\dfhack\library\xml\Bitfield.pm::L80 : emit $name, "($base whole_ = 0) : whole(whole_) {};";
C:\AppServ\dfhack\library\xml\StructFields.pm::L599 : emit "$name(){}";

C:\AppServ\dfhack\library\xml\StructFields.pm::L632 + 2 :
            emit "  :  ", join(', ', @simple_inits) if @simple_inits;
            emit_block {
                emit $_ for @ctor_lines;


C:\AppServ\dfhack\library\CMakeLists.txt

list.pl
codegen.pl
C:\AppServ\dfhack\library\include\df\static_ctors.inc::6929
C:\AppServ\dfhack\library\xml\df.knowledge.xml::404
Common.pm
StructType.pm
Enum.pm
StructField.pm::625
BitField.pm
df.jobs.xml::113



17.08.2020
ctors can be generated, do it
checklist:
different files to check: 197
differences total: 197 + 2 + 34 + 4 + 7 + 5 + 1 + 1 + 1 + 1 + 1 + 5 + 1 + 2 + 1 + 1 + 1 + 3 + 1 + 2 + 2 + 1 + 1 = 275
ctor lines to generate: 275

in sub:
different files to check: 43
differences total: 79
ctor lines to generate: 79



17.08.2020 (2):
plugins do not use default constructors generated from codegen.pl: need to go through and add them

same with bitfields created during program workflow, check for those too

disable ctors for (and all subobjects):

  df::unit_action_data_move move;
  df::unit_action_data_attack attack;
  df::unit_action_data_jump jump;
  df::unit_action_data_hold_terrain holdterrain;
  df::unit_action_data_release_terrain releaseterrain;
  df::unit_action_data_climb climb;
  df::unit_action_data_job job;
  df::unit_action_data_talk talk;
  df::unit_action_data_unsteady unsteady;
  df::unit_action_data_parry parry;
  df::unit_action_data_block block;
  df::unit_action_data_dodge dodge;
  df::unit_action_data_recover recover;
  df::unit_action_data_stand_up standup;
  df::unit_action_data_lie_down liedown;
  df::unit_action_data_job2 job2;
  df::unit_action_data_push_object pushobject;
  df::unit_action_data_suck_blood suckblood;
  df::unit_action_data_hold_item holditem;
  df::unit_action_data_release_item releaseitem;


Bitfield
StructFields
df.world.xml
df.world-data.xml
df.world-site.xml
df.units.xml::L2068
Common

ALL^^ DONE

DONE COMMIT to check : Tweak identity generation and produce even empty constructors (StructFields.pm::L630)



Fix ComplexData composition problems: Enum.pm:: Lines 209-220

DONE Core.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class tthread::thread & __thiscall tthread::thread::operator=(class tthread::thread const &)" (??4thread@tthread@@QAEAAV01@ABV01@@Z) в функции "private: bool __thiscall DFHack::Core::Init(void)" (?Init@Core@DFHack@@AAE_NXZ)



18.08.2020
LAST: binpatch.cpp

DONE? GeoLayer destructor cleanup

DONE? VeinGenerator destructor cleanup

RemoteClient, RemoteServer <future> implementation



21.08.2020
DONE Everywhere std::unordered_set<> is replaced with std::set<>
  need to put stdext::hash_set<> instead!

plugin debug.cpp : rewrite ( only need regex::match )



22.08.2020: ALL Compiles

Debug.cpp: do something with signaling and in general
Remaining:
    RemoteClient, RemoteServer <future> implementation
    Plugin debug.cpp : rewrite ( only need regex::match )
    DONE? GeoLayer destructor cleanup
    DONE? VeinGenerator destructor cleanup
    HotkeyCmd thread
    Core.cpp:L2291     std::string rawFolder = "data/save/" + (df::global::world->cur_savegame.save_dir) + "/raw/";
        unknown error at concatenation

        01B540B8 base
        002682AC offset between world and cur_save
        01DBC364 cur_save
        01DAE514 cur_save str (0025A45C) 2681AC 263444
        TOTAL DIFF 0000DE50 (56912)
        STAGE 1 
            TOTAL DIFF 00008FE8 (36840)
        Reason: STL container differences, else?

        Result:
            need to rewrite for vs2015 STL:
                std::vector (16 to 12) possible: removing _Alval : Done
                std::string (28 to 24) possible: removing _Alval : Done
                std::vector<bool> (20 to 16) possible: removing _Alval, reorder : Done
                std::deque (32 to 20) possible: removing _Alval, _Alux, _Alsmth : Done
                std::fstream (144 to 140?) seems to be 144 afterall but internal structure is questionable; vc++19 x64: 280
            2008 structs always generate NULL vtable addr (+4 bytes size), 2015 structures - only if inherit from class
                solution: replace structs with raw data, packing the values carefully, structs only if inherits
                that's a lot of work
                inner data alignment is fine

            Refs for replacement: StructFields.pm
